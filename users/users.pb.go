// Code generated by protoc-gen-go. DO NOT EDIT.
// source: users.proto

package users

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Role int32

const (
	Role_REGULAR Role = 0
	Role_ADMIN   Role = 1
)

var Role_name = map[int32]string{
	0: "REGULAR",
	1: "ADMIN",
}

var Role_value = map[string]int32{
	"REGULAR": 0,
	"ADMIN":   1,
}

func (x Role) String() string {
	return proto.EnumName(Role_name, int32(x))
}

func (Role) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_030765f334c86cea, []int{0}
}

type User struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_030765f334c86cea, []int{0}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type UserInfo struct {
	Password             []byte   `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
	Salt                 []byte   `protobuf:"bytes,2,opt,name=salt,proto3" json:"salt,omitempty"`
	Role                 Role     `protobuf:"varint,3,opt,name=role,proto3,enum=users.Role" json:"role,omitempty"`
	Directories          []string `protobuf:"bytes,4,rep,name=directories,proto3" json:"directories,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserInfo) Reset()         { *m = UserInfo{} }
func (m *UserInfo) String() string { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()    {}
func (*UserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_030765f334c86cea, []int{1}
}

func (m *UserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserInfo.Unmarshal(m, b)
}
func (m *UserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserInfo.Marshal(b, m, deterministic)
}
func (m *UserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfo.Merge(m, src)
}
func (m *UserInfo) XXX_Size() int {
	return xxx_messageInfo_UserInfo.Size(m)
}
func (m *UserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfo proto.InternalMessageInfo

func (m *UserInfo) GetPassword() []byte {
	if m != nil {
		return m.Password
	}
	return nil
}

func (m *UserInfo) GetSalt() []byte {
	if m != nil {
		return m.Salt
	}
	return nil
}

func (m *UserInfo) GetRole() Role {
	if m != nil {
		return m.Role
	}
	return Role_REGULAR
}

func (m *UserInfo) GetDirectories() []string {
	if m != nil {
		return m.Directories
	}
	return nil
}

type Session struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Session) Reset()         { *m = Session{} }
func (m *Session) String() string { return proto.CompactTextString(m) }
func (*Session) ProtoMessage()    {}
func (*Session) Descriptor() ([]byte, []int) {
	return fileDescriptor_030765f334c86cea, []int{2}
}

func (m *Session) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Session.Unmarshal(m, b)
}
func (m *Session) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Session.Marshal(b, m, deterministic)
}
func (m *Session) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Session.Merge(m, src)
}
func (m *Session) XXX_Size() int {
	return xxx_messageInfo_Session.Size(m)
}
func (m *Session) XXX_DiscardUnknown() {
	xxx_messageInfo_Session.DiscardUnknown(m)
}

var xxx_messageInfo_Session proto.InternalMessageInfo

func (m *Session) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type GetDirectoriesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDirectoriesRequest) Reset()         { *m = GetDirectoriesRequest{} }
func (m *GetDirectoriesRequest) String() string { return proto.CompactTextString(m) }
func (*GetDirectoriesRequest) ProtoMessage()    {}
func (*GetDirectoriesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_030765f334c86cea, []int{3}
}

func (m *GetDirectoriesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDirectoriesRequest.Unmarshal(m, b)
}
func (m *GetDirectoriesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDirectoriesRequest.Marshal(b, m, deterministic)
}
func (m *GetDirectoriesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDirectoriesRequest.Merge(m, src)
}
func (m *GetDirectoriesRequest) XXX_Size() int {
	return xxx_messageInfo_GetDirectoriesRequest.Size(m)
}
func (m *GetDirectoriesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDirectoriesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDirectoriesRequest proto.InternalMessageInfo

type GetDirectoriesResponse struct {
	Directories          string   `protobuf:"bytes,1,opt,name=directories,proto3" json:"directories,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDirectoriesResponse) Reset()         { *m = GetDirectoriesResponse{} }
func (m *GetDirectoriesResponse) String() string { return proto.CompactTextString(m) }
func (*GetDirectoriesResponse) ProtoMessage()    {}
func (*GetDirectoriesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_030765f334c86cea, []int{4}
}

func (m *GetDirectoriesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDirectoriesResponse.Unmarshal(m, b)
}
func (m *GetDirectoriesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDirectoriesResponse.Marshal(b, m, deterministic)
}
func (m *GetDirectoriesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDirectoriesResponse.Merge(m, src)
}
func (m *GetDirectoriesResponse) XXX_Size() int {
	return xxx_messageInfo_GetDirectoriesResponse.Size(m)
}
func (m *GetDirectoriesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDirectoriesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDirectoriesResponse proto.InternalMessageInfo

func (m *GetDirectoriesResponse) GetDirectories() string {
	if m != nil {
		return m.Directories
	}
	return ""
}

func init() {
	proto.RegisterEnum("users.Role", Role_name, Role_value)
	proto.RegisterType((*User)(nil), "users.User")
	proto.RegisterType((*UserInfo)(nil), "users.UserInfo")
	proto.RegisterType((*Session)(nil), "users.Session")
	proto.RegisterType((*GetDirectoriesRequest)(nil), "users.GetDirectoriesRequest")
	proto.RegisterType((*GetDirectoriesResponse)(nil), "users.GetDirectoriesResponse")
}

func init() { proto.RegisterFile("users.proto", fileDescriptor_030765f334c86cea) }

var fileDescriptor_030765f334c86cea = []byte{
	// 352 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xcf, 0x4e, 0xea, 0x40,
	0x14, 0xc6, 0x6f, 0x4b, 0x7b, 0x81, 0x53, 0xd2, 0x70, 0xe7, 0x2a, 0xd6, 0x06, 0xa5, 0x99, 0x15,
	0x61, 0x41, 0x13, 0xdc, 0x11, 0x37, 0x24, 0x18, 0x42, 0x82, 0x2e, 0xc6, 0xf0, 0x00, 0xd5, 0x8e,
	0x38, 0xb1, 0x99, 0x53, 0x3b, 0x43, 0x5c, 0xb9, 0xf1, 0x15, 0x7c, 0x10, 0x1f, 0xc6, 0x57, 0xf0,
	0x41, 0x4c, 0xff, 0x28, 0xe0, 0x9f, 0x5d, 0xbf, 0x73, 0xbe, 0xef, 0x9c, 0x5f, 0x4f, 0x06, 0x9c,
	0xb5, 0xe2, 0x99, 0x1a, 0xa6, 0x19, 0x6a, 0x24, 0x76, 0x21, 0xfc, 0xee, 0x0a, 0x71, 0x95, 0xf0,
	0x30, 0x4a, 0x45, 0x18, 0x49, 0x89, 0x3a, 0xd2, 0x02, 0x65, 0x65, 0xa2, 0x23, 0xb0, 0x96, 0x8a,
	0x67, 0xc4, 0x05, 0x53, 0xc4, 0x9e, 0x11, 0x18, 0xfd, 0x26, 0x33, 0x45, 0x4c, 0x7c, 0x68, 0xa4,
	0x91, 0x52, 0x0f, 0x98, 0xc5, 0x9e, 0x59, 0x54, 0x3f, 0x35, 0x7d, 0x84, 0x46, 0x9e, 0x99, 0xcb,
	0x1b, 0xdc, 0xf1, 0xe5, 0xe9, 0xd6, 0xc6, 0x47, 0x08, 0x58, 0x2a, 0x4a, 0x74, 0x91, 0x6f, 0xb1,
	0xe2, 0x9b, 0xf4, 0xc0, 0xca, 0x30, 0xe1, 0x5e, 0x2d, 0x30, 0xfa, 0xee, 0xc8, 0x19, 0x96, 0xc0,
	0x0c, 0x13, 0xce, 0x8a, 0x06, 0x09, 0xc0, 0x89, 0x45, 0xc6, 0xaf, 0x35, 0x66, 0x82, 0x2b, 0xcf,
	0x0a, 0x6a, 0xfd, 0x26, 0xdb, 0x2e, 0xd1, 0x1e, 0xd4, 0x2f, 0xb9, 0x52, 0x02, 0x25, 0xd9, 0x03,
	0x5b, 0xe3, 0x1d, 0x97, 0x15, 0x78, 0x29, 0xe8, 0x01, 0xec, 0xcf, 0xb8, 0x9e, 0x6e, 0x22, 0x8c,
	0xdf, 0xaf, 0xb9, 0xd2, 0x74, 0x0c, 0x9d, 0xaf, 0x0d, 0x95, 0xa2, 0x54, 0xdf, 0xb6, 0x96, 0xe3,
	0xb6, 0x4b, 0x83, 0x63, 0xb0, 0x72, 0x4a, 0xe2, 0x40, 0x9d, 0x9d, 0xcd, 0x96, 0x8b, 0x09, 0x6b,
	0xff, 0x21, 0x4d, 0xb0, 0x27, 0xd3, 0xf3, 0xf9, 0x45, 0xdb, 0x18, 0xbd, 0x18, 0x60, 0xe7, 0x57,
	0x51, 0xe4, 0x16, 0xdc, 0xdd, 0x2d, 0xa4, 0x5b, 0xfd, 0xe6, 0x8f, 0x54, 0xfe, 0xd1, 0x2f, 0xdd,
	0x12, 0x8d, 0x1e, 0x3e, 0xbd, 0xbe, 0x3d, 0x9b, 0xff, 0xc9, 0xbf, 0x30, 0xb7, 0x85, 0x5b, 0x4c,
	0xe4, 0x14, 0xec, 0x05, 0xae, 0x84, 0x24, 0x1f, 0x77, 0xcc, 0x01, 0x7c, 0xb7, 0x12, 0xd5, 0x91,
	0x68, 0xa7, 0x18, 0xd0, 0xa6, 0x4e, 0x39, 0x20, 0xc9, 0x13, 0x63, 0x63, 0x70, 0xf5, 0xb7, 0x78,
	0x01, 0x27, 0xef, 0x01, 0x00, 0x00, 0xff, 0xff, 0x68, 0x78, 0x63, 0xcd, 0x35, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UsersClient is the client API for Users service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UsersClient interface {
	// Get a list of user's directories
	//
	// Returns a list of a user's directories.
	GetDirectories(ctx context.Context, in *GetDirectoriesRequest, opts ...grpc.CallOption) (*GetDirectoriesResponse, error)
	// Login and get a session token
	//
	// Checks password and returns a session token to be used in further requests for a user.
	Login(ctx context.Context, in *User, opts ...grpc.CallOption) (*Session, error)
}

type usersClient struct {
	cc grpc.ClientConnInterface
}

func NewUsersClient(cc grpc.ClientConnInterface) UsersClient {
	return &usersClient{cc}
}

func (c *usersClient) GetDirectories(ctx context.Context, in *GetDirectoriesRequest, opts ...grpc.CallOption) (*GetDirectoriesResponse, error) {
	out := new(GetDirectoriesResponse)
	err := c.cc.Invoke(ctx, "/users.Users/GetDirectories", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) Login(ctx context.Context, in *User, opts ...grpc.CallOption) (*Session, error) {
	out := new(Session)
	err := c.cc.Invoke(ctx, "/users.Users/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UsersServer is the server API for Users service.
type UsersServer interface {
	// Get a list of user's directories
	//
	// Returns a list of a user's directories.
	GetDirectories(context.Context, *GetDirectoriesRequest) (*GetDirectoriesResponse, error)
	// Login and get a session token
	//
	// Checks password and returns a session token to be used in further requests for a user.
	Login(context.Context, *User) (*Session, error)
}

// UnimplementedUsersServer can be embedded to have forward compatible implementations.
type UnimplementedUsersServer struct {
}

func (*UnimplementedUsersServer) GetDirectories(ctx context.Context, req *GetDirectoriesRequest) (*GetDirectoriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDirectories not implemented")
}
func (*UnimplementedUsersServer) Login(ctx context.Context, req *User) (*Session, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}

func RegisterUsersServer(s *grpc.Server, srv UsersServer) {
	s.RegisterService(&_Users_serviceDesc, srv)
}

func _Users_GetDirectories_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDirectoriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).GetDirectories(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/users.Users/GetDirectories",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).GetDirectories(ctx, req.(*GetDirectoriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/users.Users/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).Login(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

var _Users_serviceDesc = grpc.ServiceDesc{
	ServiceName: "users.Users",
	HandlerType: (*UsersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDirectories",
			Handler:    _Users_GetDirectories_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _Users_Login_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "users.proto",
}
